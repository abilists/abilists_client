buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.gretty:gretty:3.1.1"
  }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'war'
}

apply plugin: "org.gretty"

repositories {
    // Use Maven Central for resolving dependencies.
	mavenLocal()
    mavenCentral()
    jcenter()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile){
	options.encoding = 'UTF-8'
}

// Set master version
// gradle install -Pmversion=1.5.1
final String DEFAULT_MVERSION = '2.0.0.0'
allprojects {
	if (!project.hasProperty('mversion') || !mversion) {
		ext.mversion = DEFAULT_MVERSION
	}
}

// Set master version
version = mversion

ext {
	logbackVersion = '1.2.9'
	slf4jVersion = '1.7.32'

	springVersion = '5.3.29'
	springSecrityVersion = '5.7.4'
	pagingVersion = '0.7'

}

dependencies {
	implementation 'org.slf4j:slf4j-api:' + slf4jVersion
	runtimeOnly 'org.slf4j:jcl-over-slf4j:' + slf4jVersion
	implementation 'ch.qos.logback:logback-core:' + logbackVersion
	implementation 'ch.qos.logback:logback-classic:' + logbackVersion

	implementation 'commons-beanutils:commons-beanutils:1.8.3'
	implementation 'commons-configuration:commons-configuration:1.9'
	implementation 'commons-fileupload:commons-fileupload:1.5'
	implementation ('org.springmodules:spring-modules-jakarta-commons:0.8') {
		exclude group: 'log4j', module: 'log4j'
		exclude group: 'commons-chain', module: 'commons-chain'
	}
	implementation 'commons-lang:commons-lang:2.6'
	implementation 'commons-codec:commons-codec:1.4'

	implementation 'org.apache.commons:commons-pool2:2.5.0'
	implementation 'org.apache.commons:commons-dbcp2:2.9.0'
	implementation 'org.apache.commons:commons-collections4:4.4'
	
	implementation 'org.springframework:spring-webmvc:' + springVersion
	implementation 'org.springframework:spring-jdbc:' + springVersion
	implementation 'org.springframework:spring-context:' + springVersion
	implementation 'org.springframework:spring-context-support:' + springVersion
	implementation 'org.springframework.security:spring-security-core:' + springSecrityVersion

    implementation 'io.utility:api:0.0.7'
	implementation 'io.utility:security:0.0.5'
	implementation 'io.utility:letter:0.1.0'
	implementation 'io.utility:image:0.0.2'
	implementation 'io.utility:email:0.0.8'
	implementation 'io.utility:validate:0.0.6'
	implementation 'io.paging:paging:' + pagingVersion

	implementation fileTree(dir: 'libs', include: '*.jar')
	implementation 'org.jsoup:jsoup:1.16.1'

	implementation 'org.freemarker:freemarker:2.3.32'
	implementation 'org.mybatis:mybatis:3.2.8'
	implementation 'org.mybatis:mybatis-spring:1.2.5'
	implementation 'mysql:mysql-connector-java:5.1.49'

	implementation 'eu.bitwalker:UserAgentUtils:1.21'
	implementation 'org.bouncycastle:bcprov-jdk16:1.46'
	implementation 'org.hibernate:hibernate-validator:5.4.1.Final'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

	implementation 'com.h2database:h2:2.2.224'

	providedCompile 'org.apache.tomcat:tomcat-servlet-api:9.0.65'
	providedCompile 'org.apache.tomcat:tomcat-catalina:9.0.65'

	testImplementation 'org.springframework:spring-test:' + springVersion
	testImplementation 'com.jayway.jsonpath:json-path:2.4.0'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
	testImplementation 'org.glassfish.web:el-impl:2.2'
}

farm {
  // 'jetty7', 'jetty8', 'jetty9', 'jetty93', 'jetty94', 'tomcat7', 'tomcat8'
  servletContainer = 'jetty94'
}
gretty {
	// springBoot = true
	httpPort = 9002
	scanInterval = 1
	// Change context path (base url). otherwise defaults to name of project
	contextPath = ''
	httpsEnabled = true
	jacocoEnabled = false
}

// -Pprofile=develop
final String DEFAULT_PROFILE = 'local'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}"
			}
		}
	}
	processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

// Release for your local
war {
	war.archiveName "ROOT.war"
}

task deployWar {
	copy {
		from 'build/libs/ROOT.war'
		into 'webapps'
		// into '/usr/local/tomcat/webapps'
		include '**/*.war'
	}
}

//$ gradle deployWar
// gradle -Pprofile=product deployWar
deployWar.dependsOn(war)
