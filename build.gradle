apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

// gradle dependencyReport
apply plugin: 'project-report'
// apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

//./gradlew sonarqube
//./gradlew sonarqube -x test
sonarqube {
    properties {
        property "sonar.projectName", "Project :: Abilists Apps"
        property "sonar.projectKey", "$project.group:$project.name"
        property "sonar.language", "java"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

buildscript {
	repositories { 
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies { 
    	classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
    	classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.3'
    	// classpath 'org.akhikhl.gretty:gretty:+'
	}
}

version = '0.1.1'

jar {
	manifest {
		attributes 'Implementation-Title': 'Abilists', 'Implementation-Version': version
	}
}

repositories {
	mavenLocal()
    mavenCentral()
}

// For provided jars
configurations {
	provided
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.0.b2'
    }
}

ext {
	springVersion = '4.3.17.RELEASE'
	springSecrityVersion = '4.2.6.RELEASE'
	logbackVersion = '1.1.3'
}

dependencies {
	compile "com.abilists:apps:0.2.1"
	testCompile 'org.springframework:spring-test:' + springVersion
	testCompile "junit:junit:4.12"
	testCompile 'javax.servlet:javax.servlet-api:4.0.1'
	testCompile 'org.glassfish.web:el-impl:2.2' // For Junit

	provided "org.apache.tomcat:tomcat-servlet-api:8.5.5"
}

/* Multi-users environment */
// gradle jettyRun -Pprofile=develop
final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}"
			}
		}
	}
}

// gradle jettyRun
jettyRun {
	httpPort = 9003
	reload = 'automatic'
	scanIntervalSeconds = 2
	// Change context path (base url). otherwise defaults to name of project
	contextPath = ''
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

// Release for your local
war {
	war.archiveName "ROOT.war"
}

// Windows - C:/Users/house/Documents
task deployWar << {
	copy {
		from 'build/libs/ROOT.war'
		into 'webapps'
		// into '/usr/local/tomcat/webapps'
		include '**/*.war'
	}
}

//$ gradle deployWar
// gradle -Pprofile=product deployWar
deployWar.dependsOn(war)

// $ gradle wrapper
task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}
