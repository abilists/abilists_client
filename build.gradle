apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

// gradle dependencyReport
apply plugin: 'project-report'
// apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

//./gradlew sonarqube
//./gradlew sonarqube -x test
sonarqube {
    properties {
        property "sonar.projectName", "Project :: Abilists Apps"
        property "sonar.projectKey", "$project.group:$project.name"
        property "sonar.language", "java"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

buildscript {
	repositories { 
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies { 
    	classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
    	classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.3'
    	// classpath 'org.akhikhl.gretty:gretty:+'
	}
}

// gradle install -Pprofile=staging -Pmversion=0.3.5
// gradle -Pprofile=product -Pmversion=0.3.5 deployWar
final String DEFAULT_PROFILE = 'staging'
final String DEFAULT_MVERSION = '0.3.5'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}"
			}
		}
	}
	
	if (!project.hasProperty('mversion') || !mversion) {
		ext.mversion = DEFAULT_MVERSION
	}
}

// Set master version
version = mversion

jar {
	manifest {
		attributes 'Implementation-Title': 'Abilists', 'Implementation-Version': version
	}
}

repositories {
	mavenLocal()
    mavenCentral()
}

// For provided jars
configurations {
	provided
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.0.b2'
    }
}

ext {
	springVersion = '4.3.24.RELEASE'
	springSecrityVersion = '4.2.6.RELEASE'
	logbackVersion = '1.1.3'
	pagingVersion = '0.2'
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.12'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.12'
	compile 'ch.qos.logback:logback-core:1.1.3'
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile "org.hibernate:hibernate-validator:5.4.1.Final"
	compile "org.apache.commons:commons-pool2:2.5.0"
	compile "org.apache.commons:commons-dbcp2:2.3.0"
	compile "org.apache.commons:commons-collections4:4.1"
	compile "commons-beanutils:commons-beanutils:1.8.3"
	compile "commons-configuration:commons-configuration:1.9"
	compile 'commons-lang:commons-lang:2.6'
	compile "commons-codec:commons-codec:1.4"
    compile "commons-fileupload:commons-fileupload:1.3"
	compile "com.googlecode.json-simple:json-simple:1.1.1"
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.11.4'
	compile "org.freemarker:freemarker:2.3.23"
	compile "org.mybatis:mybatis:3.2.8"
	compile "org.mybatis:mybatis-spring:1.2.5"
	compile 'org.springframework:spring-webmvc:' + springVersion
	compile 'org.springframework:spring-context:' + springVersion
	compile 'org.springframework:spring-jdbc:' + springVersion
	compile 'org.springframework.security:spring-security-core:' + springSecrityVersion
	compile ('org.springmodules:spring-modules-jakarta-commons:0.8') {
		exclude group: 'commons-chain', module: 'commons-chain'
	}
	compile 'com.h2database:h2:1.4.196'
	compile 'eu.bitwalker:UserAgentUtils:1.21'
    compile "io.utility:api:0.0.2"
	compile "io.utility:validate:0.0.5"
	compile "io.utility:security:0.0.1"
	compile "io.utility:letter:0.0.2"
	compile "io.utility:image:0.0.1"
	compile "io.utility:email:0.0.3"
	compile "io.paging:paging:" + pagingVersion
	compile fileTree(dir: 'libs', include: '*.jar')
	provided 'org.apache.tomcat:tomcat-servlet-api:8.5.42'
	provided 'org.apache.tomcat:tomcat-catalina:8.5.42'
	testCompile 'org.springframework:spring-test:' + springVersion
	testCompile "junit:junit:4.12"
	testCompile 'javax.servlet:javax.servlet-api:4.0.1'
	testCompile 'org.glassfish.web:el-impl:2.2' // For Junit
}

// gradle jettyRun
jettyRun {
	httpPort = 9003
	reload = 'automatic'
	scanIntervalSeconds = 2
	// Change context path (base url). otherwise defaults to name of project
	contextPath = ''
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

// Release for your local
war {
	war.archiveName "ROOT.war"
}

// Windows - C:/Users/house/Documents
task deployWar << {
	copy {
		from 'build/libs/ROOT.war'
		into 'webapps'
		// into '/usr/local/tomcat/webapps'
		include '**/*.war'
	}
}

//$ gradle deployWar
// gradle -Pprofile=product deployWar
deployWar.dependsOn(war)

// $ gradle wrapper
task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}
